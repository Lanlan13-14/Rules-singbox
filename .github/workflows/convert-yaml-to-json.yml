name: Convert Clash YAML to sing-box JSON

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  convert:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 安装 Python 依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install pyyaml

      - name: 克隆规则仓库
        run: git clone --depth=1 https://github.com/blackmatrix7/ios_rule_script.git temp_repo

      - name: 转换 YAML 到 sing-box JSON (排除 No_Resolve)
        shell: bash
        run: |
          mkdir -p rules
          find temp_repo/rule/Clash -type f \( -name '*.yaml' -o -name '*.yml' \) | grep -v 'No_Resolve' | while read -r yaml_file; do
            base_name=$(basename "${yaml_file%.*}.json")
            cat <<'EOF' | python3 - "$yaml_file" "rules/$base_name"
import yaml
import json
import sys
import os

yaml_file = sys.argv[1]
json_file = sys.argv[2]

with open(yaml_file, 'r', encoding='utf-8') as f:
    data = yaml.safe_load(f) or {}

mapping = {
    'DOMAIN': 'domain',
    'DOMAIN-SUFFIX': 'domain_suffix',
    'DOMAIN-KEYWORD': 'domain_keyword',
    'DOMAIN-REGEX': 'domain_regex',
    'IP-CIDR': 'ip_cidr',
    'IP-CIDR6': 'ip_cidr',
    'IP6-CIDR': 'ip_cidr',
    'SRC-IP-CIDR': 'source_ip_cidr',
    'PROCESS-NAME': 'package_name',
    'PROCESS-PATH': 'process_path',
    'PROCESS-PATH-REGEX': 'process_path_regex',
    'PORT': 'port',
    'PORT-RANGE': 'port_range',
    'SRC-PORT': 'source_port',
    'SRC-PORT-RANGE': 'source_port_range'
}

rule = {}

for item in data.get('payload', []):
    if not item or not isinstance(item, str):
        continue
    parts = item.split(',', 1)
    if len(parts) != 2:
        continue
    t, v = parts[0].strip().upper(), parts[1].strip()
    if t in mapping:
        key = mapping[t]
        if key == 'domain_suffix' and not v.startswith('.'):
            v = '.' + v
        rule.setdefault(key, []).append(v)

clean_rule = {k: v for k, v in rule.items() if v}

if not clean_rule:
    sys.exit(0)

os.makedirs(os.path.dirname(json_file), exist_ok=True)

with open(json_file, 'w', encoding='utf-8') as f:
    json.dump({'version': 3, 'rules': [clean_rule]}, f, indent=2, ensure_ascii=False)

print(f'Wrote {json_file}')
EOF
          done

      - name: 提交并推送改动
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add rules/*.json
          if ! git diff --cached --quiet; then
            git commit -m "Convert Clash YAML to sing-box JSON (exclude No_Resolve)"
            git push
          else
            echo "No changes to commit"
          fi