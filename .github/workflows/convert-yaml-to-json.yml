name: Clone and Convert Clash YAML to sing-box JSON

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  convert:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 安装 Python 及依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install pyyaml

      - name: 克隆 ios_rule_script 仓库
        run: |
          git clone --depth=1 https://github.com/blackmatrix7/ios_rule_script.git temp_repo

      - name: 转换所有 YAML 到 sing-box JSON (排除 No_Resolve)
        run: |
          mkdir -p rules
          find temp_repo/rule/Clash -type f \( -name '*.yaml' -o -name '*.yml' \) | grep -v 'No_Resolve' | while read -r yaml_file; do
            base_name=$(basename "${yaml_file%.*}.json")

            python3 <<EOF
import yaml, json, sys, os

mapping = {
    "DOMAIN": "domain",
    "DOMAIN-SUFFIX": "domain_suffix",
    "DOMAIN-KEYWORD": "domain_keyword",
    "DOMAIN-REGEX": "domain_regex",
    "IP-CIDR": "ip_cidr",
    "IP-CIDR6": "ip_cidr",
    "IP6-CIDR": "ip_cidr",
    "SRC-IP-CIDR": "source_ip_cidr",
    "PROCESS-NAME": "package_name",
    "PROCESS-PATH": "process_path",
    "PROCESS-PATH-REGEX": "process_path_regex",
    "PORT": "port",
    "PORT-RANGE": "port_range",
    "SRC-PORT": "source_port",
    "SRC-PORT-RANGE": "source_port_range"
}

with open("$yaml_file", "r", encoding="utf-8") as f:
    data = yaml.safe_load(f) or {}

rule = {}

for item in data.get("payload", []):
    if not item or not isinstance(item, str):
        continue
    parts = item.split(",", 1)
    if len(parts) != 2:
        continue
    type_, value = parts[0].strip().upper(), parts[1].strip()
    if type_ in mapping:
        field = mapping[type_]
        if field == "domain_suffix" and not value.startswith("."):
            value = "." + value
        rule.setdefault(field, []).append(value)

clean_rule = {k: v for k, v in rule.items() if v}

if not clean_rule:
    print("No rules generated for $yaml_file — skipping")
    sys.exit(0)

out = {"version": 3, "rules": [clean_rule]}
os.makedirs("rules", exist_ok=True)
with open(os.path.join("rules", "$base_name"), "w", encoding="utf-8") as f:
    json.dump(out, f, indent=2, ensure_ascii=False)
print(f"Wrote rules/$base_name")
EOF
          done

      - name: 提交并推送改动
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add rules/*.json
          if ! git diff --cached --quiet; then
            git commit -m "Convert Clash YAML to sing-box JSON (exclude No_Resolve)"
            git push
          else
            echo "No changes to commit"
          fi